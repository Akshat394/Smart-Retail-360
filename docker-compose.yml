version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: smartretail360-postgres
    environment:
      POSTGRES_DB: smartretail360
      POSTGRES_USER: smartretail360_user
      POSTGRES_PASSWORD: smartretail360_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - smartretail360-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U smartretail360_user -d smartretail360"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: smartretail360-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - smartretail360-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend API Service
  backend:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: smartretail360-backend
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://smartretail360_user:smartretail360_password@postgres:5432/smartretail360
      REDIS_URL: redis://redis:6379
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      PORT: 3001
    ports:
      - "3001:3001"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./server:/app
      - /app/node_modules
    networks:
      - smartretail360-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/api/system-health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ML Service
  ml-service:
    build:
      context: ./ml_service
      dockerfile: Dockerfile
    container_name: smartretail360-ml
    environment:
      PYTHONPATH: /app
      MODEL_PATH: /app/models
      REDIS_URL: redis://redis:6379
    ports:
      - "8000:8000"
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - ./ml_service:/app
      - ml_models:/app/models
    networks:
      - smartretail360-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend Application
  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: smartretail360-frontend
    environment:
      VITE_API_URL: http://localhost:3001/api
      VITE_ML_SERVICE_URL: http://localhost:8000
      VITE_WS_URL: ws://localhost:3001/ws
    ports:
      - "3000:3000"
    depends_on:
      backend:
        condition: service_healthy
    volumes:
      - ./client:/app
      - /app/node_modules
    networks:
      - smartretail360-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Edge Device Simulator
  edge-simulator:
    build:
      context: ./edge_device_sim
      dockerfile: Dockerfile
    container_name: smartretail360-edge-sim
    environment:
      PYTHONPATH: /app
      MQTT_BROKER: mqtt-broker
      REDIS_URL: redis://redis:6379
    ports:
      - "1883:1883"
      - "9001:9001"
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - ./edge_device_sim:/app
    networks:
      - smartretail360-network
    restart: unless-stopped

  # MQTT Broker
  mqtt-broker:
    image: eclipse-mosquitto:2.0
    container_name: smartretail360-mqtt
    ports:
      - "1883:1883"
      - "9001:9001"
    volumes:
      - ./mqtt/config:/mosquitto/config
      - ./mqtt/data:/mosquitto/data
      - ./mqtt/log:/mosquitto/log
    networks:
      - smartretail360-network
    restart: unless-stopped

  # Blockchain Node (Ganache for development)
  blockchain:
    image: trufflesuite/ganache:latest
    container_name: smartretail360-blockchain
    environment:
      - GANACHE_DB=/data/ganache-db
      - GANACHE_NETWORK_ID=1337
      - GANACHE_DETERMINISTIC=true
      - GANACHE_MNEMONIC="smart retail 360 blockchain development mnemonic"
    ports:
      - "8545:8545"
    volumes:
      - blockchain_data:/data
    networks:
      - smartretail360-network
    restart: unless-stopped

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: smartretail360-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - ./nginx/logs:/var/log/nginx
    depends_on:
      - frontend
      - backend
      - ml-service
    networks:
      - smartretail360-network
    restart: unless-stopped

  # Monitoring - Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: smartretail360-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - smartretail360-network
    restart: unless-stopped

  # Monitoring - Grafana
  grafana:
    image: grafana/grafana:latest
    container_name: smartretail360-grafana
    ports:
      - "3002:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    depends_on:
      - prometheus
    networks:
      - smartretail360-network
    restart: unless-stopped

  # Logging - Elasticsearch
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.8.0
    container_name: smartretail360-elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - smartretail360-network
    restart: unless-stopped

  # Logging - Kibana
  kibana:
    image: docker.elastic.co/kibana/kibana:8.8.0
    container_name: smartretail360-kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - smartretail360-network
    restart: unless-stopped

  # Logging - Filebeat
  filebeat:
    image: docker.elastic.co/beats/filebeat:8.8.0
    container_name: smartretail360-filebeat
    user: root
    volumes:
      - ./monitoring/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    depends_on:
      - elasticsearch
    networks:
      - smartretail360-network
    restart: unless-stopped

  # Testing - Selenium Grid
  selenium-hub:
    image: selenium/hub:4.10.0
    container_name: smartretail360-selenium-hub
    ports:
      - "4442:4442"
      - "4443:4443"
      - "4444:4444"
    networks:
      - smartretail360-network
    restart: unless-stopped

  selenium-chrome:
    image: selenium/node-chrome:4.10.0
    container_name: smartretail360-selenium-chrome
    shm_size: 2gb
    depends_on:
      - selenium-hub
    environment:
      - SE_EVENT_BUS_HOST=selenium-hub
      - SE_EVENT_BUS_PUBLISH_PORT=4442
      - SE_EVENT_BUS_SUBSCRIBE_PORT=4443
    networks:
      - smartretail360-network
    restart: unless-stopped

  selenium-firefox:
    image: selenium/node-firefox:4.10.0
    container_name: smartretail360-selenium-firefox
    shm_size: 2gb
    depends_on:
      - selenium-hub
    environment:
      - SE_EVENT_BUS_HOST=selenium-hub
      - SE_EVENT_BUS_PUBLISH_PORT=4442
      - SE_EVENT_BUS_SUBSCRIBE_PORT=4443
    networks:
      - smartretail360-network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  ml_models:
    driver: local
  blockchain_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
  elasticsearch_data:
    driver: local

networks:
  smartretail360-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16 